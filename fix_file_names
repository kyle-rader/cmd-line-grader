#!/usr/bin/env bash

################################################################################
#
#                        Fix File Names
#
# Author        : Kyle Rader - Graduate Teaching Assistant - WWU CS
# Created       : 28 Feb 2015
# Last Modified : 16 March 2015
#
# Description : Iterate through each file name in DIRECTORY and try to
#                 match each regex and attempt rename the file to the
#                 given desired name if a match is found.  Otherwise
#                 if no matches are found for a file display the file
#                 to the user and prompt for a new name.
################################################################################

set -e

shopt -s nullglob

usage="usage: fix_file_name ORIG_FILENAME REGEX FINAL_FILENAME PERL_SUBSTITUTION"
usage2="                    [ ORIG_FILENAME REGEX FINAL_FILENAME PERL_SUBSTITUTION ] ..."

# Check command line arguments
# Check for at least 4 args or a multiple of 4 args.
if [ $# -lt "4" -o $[ $# % 4 ] -ne "0" ]; then
    echo $usage
    echo $usage2
    echo
    exit 1
fi

# Put command line args into an actual array,
args=( "$@" )

# Collect all java file names in the current directory.
# (Must use quotes here to correctly separate file names with spaces)
files=( "*.java" )

# Try to match all files with a desired filename
for file in ${files[@]} ; do

    found=false
    for (( fname=0, regex=1, new=2, perl=3 ; fname < $# ; fname+=4, regex+=4, new+=4, perl+=4 )); do
  if [[ "$file" =~ ${args[regex]} ]]; then

      # Rename file to ORIG_FILENAME
      if [ "$file" != "${args[fname]}" ]; then
    mv "$file" ${args[fname]}
      fi
      found=true
      break;
  fi
    done

    if [ $found == "false" ]; then
  echo "****************************************"
  echo "!! HELP !!"
  echo "Trying to rename: $file"
  more "$file"
  printf "\nNew filename (Enter to use same) > "
  read newFilename
  if [ ! -z $newFilename ]; then
      mv "$file" "$newFilename"
  fi
    fi
done

for (( fname=0, new=2, perl=3 ; fname < $# ; fname+=4, new+=4, perl+=4 )); do
    if [ -f "${args[fname]}" ]; then
  perl -0777 -pe "${args[perl]}" ${args[fname]} > ${args[new]}
    fi
done
